"use strict";

var audioType = require("audio-type");
var WavDecoder = require("wav-decoder");
var DecoderUtils = require("./utils/DecoderUtils");
var AudioDataUtils = require("./utils/AudioDataUtils");
var AudioBuffer = require("./api/AudioBuffer");

var decoders = {};

/**
 * @param {string}    type
 * @return {function}
 */
function get(type) {
  return decoders[type] || null;
}

/**
 * @param {string}   type
 * @param {function} fn
 */
function set(type, fn) {
  /* istanbul ignore else */
  if (typeof fn === "function") {
    decoders[type] = fn;
  }
}

/**
 * @param {ArrayBuffer} AudioBuffer
 * @param {object}      opts
 * @return {Promise<AudioData>}
 */
function decode(audioData, opts) {
  var type = toAudioType(audioData);
  var decodeFn = decoders[type];

  if (typeof decodeFn !== "function") {
    return Promise.reject(new TypeError("Decoder does not support the audio format: " + (type || "unknown")));
  }

  return DecoderUtils.decode(decodeFn, audioData, opts).then(function (audioData) {
    return AudioDataUtils.toAudioBuffer(audioData, AudioBuffer);
  });
}

function toAudioType(audioData) {
  if (audioData instanceof ArrayBuffer) {
    audioData = new Uint8Array(audioData, 0, 16);
  }
  return audioType(audioData) || "";
}

set("wav", WavDecoder.decode);

module.exports = { get: get, set: set, decode: decode };