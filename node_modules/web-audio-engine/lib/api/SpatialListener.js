"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var AudioParam = require("./AudioParam");

var _require = require("../utils"),
    defineProp = _require.defineProp;

var SpatialListener = function () {
  function SpatialListener(context, impl) {
    _classCallCheck(this, SpatialListener);

    defineProp(this, "_context", context);
    defineProp(this, "_impl", impl);

    this._impl.$positionX = new AudioParam(context, this._impl.getPositionX());
    this._impl.$positionY = new AudioParam(context, this._impl.getPositionY());
    this._impl.$positionZ = new AudioParam(context, this._impl.getPositionZ());
    this._impl.$forwardX = new AudioParam(context, this._impl.getForwardX());
    this._impl.$forwardY = new AudioParam(context, this._impl.getForwardY());
    this._impl.$forwardZ = new AudioParam(context, this._impl.getForwardZ());
    this._impl.$upX = new AudioParam(context, this._impl.getUpX());
    this._impl.$upY = new AudioParam(context, this._impl.getUpY());
    this._impl.$upZ = new AudioParam(context, this._impl.getUpZ());
  }

  _createClass(SpatialListener, [{
    key: "positionX",
    get: function get() {
      return this._impl.$positionX;
    }
  }, {
    key: "positionY",
    get: function get() {
      return this._impl.$positionY;
    }
  }, {
    key: "positionZ",
    get: function get() {
      return this._impl.$positionZ;
    }
  }, {
    key: "forwardX",
    get: function get() {
      return this._impl.$forwardX;
    }
  }, {
    key: "forwardY",
    get: function get() {
      return this._impl.$forwardY;
    }
  }, {
    key: "forwardZ",
    get: function get() {
      return this._impl.$forwardZ;
    }
  }, {
    key: "upX",
    get: function get() {
      return this._impl.$upX;
    }
  }, {
    key: "upY",
    get: function get() {
      return this._impl.$upY;
    }
  }, {
    key: "upZ",
    get: function get() {
      return this._impl.$upZ;
    }
  }]);

  return SpatialListener;
}();

module.exports = SpatialListener;